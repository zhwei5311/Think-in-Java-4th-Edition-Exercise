//: arrays/E04_ThreeDDoubleArray.java
/****************** Exercise 4 *****************
 * Repeat the previous exercise for a
 * three-dimensional array.
 ***********************************************/
package arrays;
import java.util.Locale;
import static net.mindview.util.Print.*;

public class E04_ThreeDDoubleArray {
  public static double[][][] threeDDoubleArray(
    int xLen, int yLen, int zLen,
    double valStart, double valEnd) {
    double[][][] array = new double[xLen][yLen][zLen];
    double increment =
      (valEnd - valStart)/(xLen * yLen * zLen);
    double val = valStart;
    for(int i = 0; i < array.length; i++)
      for(int j = 0; j < array[i].length; j++)
        for(int k = 0; k < array[i][j].length; k++) {
          array[i][j][k] = val;
          val += increment;
        }
    return array;
  }
  public static void printArray(double[][][] array) {
    for(int i = 0; i < array.length; i++) {
      for(int j = 0; j < array[i].length; j++) {
        for(int k = 0; k < array[i][j].length; k++)
          System.out.printf(
            Locale.US, "%.2f ", array[i][j][k]);
        print();
      }
      print();
    }
  }
  public static void main(String args[]) {
    double[][][] threeD =
      threeDDoubleArray(4, 6, 2, 47.0, 99.0);
    printArray(threeD);
    print("**********************");
    double[][][] threeD2 =
      threeDDoubleArray(2, 2, 5, 47.0, 99.0);
    printArray(threeD2);
    print("**********************");
    double[][][] threeD3 =
      threeDDoubleArray(9, 5, 7, 47.0, 99.0);
    printArray(threeD3);
  }
} /* Output:
47.00 48.08
49.17 50.25
51.33 52.42
53.50 54.58
55.67 56.75
57.83 58.92

60.00 61.08
62.17 63.25
64.33 65.42
66.50 67.58
68.67 69.75
70.83 71.92

73.00 74.08
75.17 76.25
77.33 78.42
79.50 80.58
81.67 82.75
83.83 84.92

86.00 87.08
88.17 89.25
90.33 91.42
92.50 93.58
94.67 95.75
96.83 97.92

**********************
47.00 49.60 52.20 54.80 57.40
60.00 62.60 65.20 67.80 70.40

73.00 75.60 78.20 80.80 83.40
86.00 88.60 91.20 93.80 96.40

**********************
47.00 47.17 47.33 47.50 47.66 47.83 47.99
48.16 48.32 48.49 48.65 48.82 48.98 49.15
49.31 49.48 49.64 49.81 49.97 50.14 50.30
50.47 50.63 50.80 50.96 51.13 51.29 51.46
51.62 51.79 51.95 52.12 52.28 52.45 52.61

52.78 52.94 53.11 53.27 53.44 53.60 53.77
53.93 54.10 54.26 54.43 54.59 54.76 54.92
55.09 55.25 55.42 55.58 55.75 55.91 56.08
56.24 56.41 56.57 56.74 56.90 57.07 57.23
57.40 57.57 57.73 57.90 58.06 58.23 58.39

58.56 58.72 58.89 59.05 59.22 59.38 59.55
59.71 59.88 60.04 60.21 60.37 60.54 60.70
60.87 61.03 61.20 61.36 61.53 61.69 61.86
62.02 62.19 62.35 62.52 62.68 62.85 63.01
63.18 63.34 63.51 63.67 63.84 64.00 64.17

64.33 64.50 64.66 64.83 64.99 65.16 65.32
65.49 65.65 65.82 65.98 66.15 66.31 66.48
66.64 66.81 66.97 67.14 67.30 67.47 67.63
67.80 67.97 68.13 68.30 68.46 68.63 68.79
68.96 69.12 69.29 69.45 69.62 69.78 69.95

70.11 70.28 70.44 70.61 70.77 70.94 71.10
71.27 71.43 71.60 71.76 71.93 72.09 72.26
72.42 72.59 72.75 72.92 73.08 73.25 73.41
73.58 73.74 73.91 74.07 74.24 74.40 74.57
74.73 74.90 75.06 75.23 75.39 75.56 75.72

75.89 76.05 76.22 76.38 76.55 76.71 76.88
77.04 77.21 77.37 77.54 77.70 77.87 78.03
78.20 78.37 78.53 78.70 78.86 79.03 79.19
79.36 79.52 79.69 79.85 80.02 80.18 80.35
80.51 80.68 80.84 81.01 81.17 81.34 81.50

81.67 81.83 82.00 82.16 82.33 82.49 82.66
82.82 82.99 83.15 83.32 83.48 83.65 83.81
83.98 84.14 84.31 84.47 84.64 84.80 84.97
85.13 85.30 85.46 85.63 85.79 85.96 86.12
86.29 86.45 86.62 86.78 86.95 87.11 87.28

87.44 87.61 87.77 87.94 88.10 88.27 88.43
88.60 88.77 88.93 89.10 89.26 89.43 89.59
89.76 89.92 90.09 90.25 90.42 90.58 90.75
90.91 91.08 91.24 91.41 91.57 91.74 91.90
92.07 92.23 92.40 92.56 92.73 92.89 93.06

93.22 93.39 93.55 93.72 93.88 94.05 94.21
94.38 94.54 94.71 94.87 95.04 95.20 95.37
95.53 95.70 95.86 96.03 96.19 96.36 96.52
96.69 96.85 97.02 97.18 97.35 97.51 97.68
97.84 98.01 98.17 98.34 98.50 98.67 98.83
*///:~
