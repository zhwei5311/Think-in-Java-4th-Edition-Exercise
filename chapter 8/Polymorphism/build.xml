<?xml version="1.0" ?>

<project
 basedir="."
 default="run"
 name="Thinking in Java, 4th Edition Solution Guide (chapter: polymorphism)">

  <description>
    build.xml for the source code for the polymorphism chapter of
    Thinking in Java, 4th Edition Solution Guide
    Source code available at http://www.MindView.net
    See copyright notice in CopyRight.txt

    Ant available from: http://jakarta.apache.org/ant

    To see options, type: ant -p

    NOTE: run 'ant build' from the main directory before
    attempting to use this build file, which depends on
    other files in the project. The chapter build files are
    provided as a convenience, so you can focus on one
    chapter at a time if you prefer.

    This file was automatically generated by AntBuilder
  </description>

  <condition property="minimumAntVersion">
    <antversion atleast="1.7.0"/>
  </condition>

  <fail
   message="Ant Version of at least 1.7 required"
   unless="minimumAntVersion"/>

  <condition property="version1.5OrGreater">
    <not>
      <or>
        <equals arg1="${ant.java.version}" arg2="1.1"/>
        <equals arg1="${ant.java.version}" arg2="1.2"/>
        <equals arg1="${ant.java.version}" arg2="1.3"/>
        <equals arg1="${ant.java.version}" arg2="1.4"/>
      </or>
    </not>
  </condition>

  <fail
   message="J2SE5 or greater required"
   unless="version1.5OrGreater"/>

  <property environment="env"/>

  <path id="project.class.path">
    <pathelement location="${basedir}"/>
    <pathelement location="${basedir}/.."/>
    <pathelement path="${java.class.path}"/>
  </path>

  <target
   depends=""
   description="Build all classes in this directory"
   name="build">
    <echo message="Building 'polymorphism'"/>
    <javac
     classpathref="project.class.path"
     debug="true"
     srcdir="${basedir}">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
    <echo message="Build 'polymorphism' succeeded"/>
  </target>

  <target name="E01_Upcasting">
    <java
     classname="polymorphism.E01_Upcasting"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E02_Shapes">
    <java
     classname="polymorphism.E02_Shapes"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E03_NewShapeMethod">
    <java
     classname="polymorphism.E03_NewShapeMethod"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E04_NewShapeType">
    <java
     classname="polymorphism.E04_NewShapeType"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E05_Wheels">
    <java
     classname="polymorphism.E05_Wheels"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E06_MusicToString">
    <java
     classname="polymorphism.E06_MusicToString"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E07_NewInstrument">
    <java
     classname="polymorphism.E07_NewInstrument"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E08_RandomInstruments">
    <java
     classname="polymorphism.E08_RandomInstruments"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E08_RandomInstruments2">
    <java
     classname="polymorphism.E08_RandomInstruments2"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E09_Rodents">
    <java
     classname="polymorphism.E09_Rodents"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E10_MethodCalls">
    <java
     classname="polymorphism.E10_MethodCalls"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E11_Pickle">
    <java
     classname="polymorphism.E11_Pickle"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E12_RodentInitialization">
    <java
     classname="polymorphism.E12_RodentInitialization"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E13_VerifiedRefCounting">
    <java
     classname="polymorphism.E13_VerifiedRefCounting"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E14_SharedRodentInitialization">
    <java
     classname="polymorphism.E14_SharedRodentInitialization"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E15_PolyConstructors2">
    <java
     classname="polymorphism.E15_PolyConstructors2"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E16_Starship">
    <java
     classname="polymorphism.E16_Starship"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E17_RTTI">
    <java
     classname="polymorphism.E17_RTTI"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="false"
     fork="true"/>
    <echo message="* Exception was expected *"/>
  </target>

  <target name="Frog">
    <java
     classname="polymorphism.Frog"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="PolyConstructors">
    <java
     classname="polymorphism.PolyConstructors"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Sandwich">
    <java
     classname="polymorphism.Sandwich"
     classpathref="project.class.path"
     dir="../polymorphism/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Music">
    <java
     classname="polymorphism.music.Music"
     classpathref="project.class.path"
     dir="../polymorphism/music/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Music2">
    <java
     classname="polymorphism.music.Music2"
     classpathref="project.class.path"
     dir="../polymorphism/music/"
     failonerror="true"
     fork="true"/>
  </target>

  <target
   depends="build"
   description="Compile and run"
   name="run">
    <touch file="failures"/>
    <antcall target="E01_Upcasting"/>
    <antcall target="E02_Shapes"/>
    <antcall target="E03_NewShapeMethod"/>
    <antcall target="E04_NewShapeType"/>
    <antcall target="E05_Wheels"/>
    <antcall target="E06_MusicToString"/>
    <antcall target="E07_NewInstrument"/>
    <antcall target="E08_RandomInstruments"/>
    <antcall target="E08_RandomInstruments2"/>
    <antcall target="E09_Rodents"/>
    <antcall target="E10_MethodCalls"/>
    <antcall target="E11_Pickle"/>
    <antcall target="E12_RodentInitialization"/>
    <antcall target="E13_VerifiedRefCounting"/>
    <antcall target="E14_SharedRodentInitialization"/>
    <antcall target="E15_PolyConstructors2"/>
    <antcall target="E16_Starship"/>
    <antcall target="E17_RTTI"/>
    <antcall target="Frog"/>
    <antcall target="PolyConstructors"/>
    <antcall target="Sandwich"/>
    <antcall target="Music"/>
    <antcall target="Music2"/>
    <delete file="failures"/>
  </target>

  <target description="delete all byproducts" name="clean">
    <delete>
      <fileset dir="${basedir}" includes="**/*.class"/>
      <fileset dir="${basedir}" includes="**/*output.txt"/>
      <fileset dir="${basedir}" includes="**/*control*.txt"/>
      <fileset dir="${basedir}" includes="**/*results.txt"/>
      <fileset dir="${basedir}" includes="**/log.txt"/>
      <fileset dir="${basedir}" includes="**/cmp-out.txt"/>
      <fileset dir="${basedir}" includes="**/Generated.txt"/>
      <fileset dir="${basedir}" includes="**/OutputErrors.txt"/>
      <fileset dir="${basedir}" includes="failures"/>
    </delete>
    <echo message="clean successful"/>
  </target>

  <target
   depends="build"
   description="Verifies comment output; requires Python 2.3 or newer"
   name="verify">
    <exec executable="python">
      <arg value="../OutputVerifier.py"/>
      <env
       key="CLASSPATH"
       path="${basedir};${basedir}/..;${basedir}/../..;"/>
    </exec>
  </target>

</project>


