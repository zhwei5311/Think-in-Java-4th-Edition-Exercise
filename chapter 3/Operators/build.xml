<?xml version="1.0" ?>

<project
 basedir="."
 default="run"
 name="Thinking in Java, 4th Edition Solution Guide (chapter: operators)">

  <description>
    build.xml for the source code for the operators chapter of
    Thinking in Java, 4th Edition Solution Guide
    Source code available at http://www.MindView.net
    See copyright notice in CopyRight.txt

    Ant available from: http://jakarta.apache.org/ant

    To see options, type: ant -p

    NOTE: run 'ant build' from the main directory before
    attempting to use this build file, which depends on
    other files in the project. The chapter build files are
    provided as a convenience, so you can focus on one
    chapter at a time if you prefer.

    This file was automatically generated by AntBuilder
  </description>

  <condition property="minimumAntVersion">
    <antversion atleast="1.7.0"/>
  </condition>

  <fail
   message="Ant Version of at least 1.7 required"
   unless="minimumAntVersion"/>

  <condition property="version1.5OrGreater">
    <not>
      <or>
        <equals arg1="${ant.java.version}" arg2="1.1"/>
        <equals arg1="${ant.java.version}" arg2="1.2"/>
        <equals arg1="${ant.java.version}" arg2="1.3"/>
        <equals arg1="${ant.java.version}" arg2="1.4"/>
      </or>
    </not>
  </condition>

  <fail
   message="J2SE5 or greater required"
   unless="version1.5OrGreater"/>

  <property environment="env"/>

  <path id="project.class.path">
    <pathelement location="${basedir}"/>
    <pathelement location="${basedir}/.."/>
    <pathelement path="${java.class.path}"/>
  </path>

  <target
   depends=""
   description="Build all classes in this directory"
   name="build">
    <echo message="Building 'operators'"/>
    <javac
     classpathref="project.class.path"
     debug="true"
     srcdir="${basedir}">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
    <echo message="Build 'operators' succeeded"/>
  </target>

  <target name="E01_PrintStatements">
    <java
     classname="operators.E01_PrintStatements"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E02_Aliasing">
    <java
     classname="operators.E02_Aliasing"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E03_Aliasing2">
    <java
     classname="operators.E03_Aliasing2"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E04_Velocity">
    <java
     classname="operators.E04_Velocity"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true">
      <arg line="30.5 3.2"/>
    </java>
  </target>

  <target name="E05_Dogs">
    <java
     classname="operators.E05_Dogs"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E06_DogsComparison">
    <java
     classname="operators.E06_DogsComparison"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E07_CoinFlipping">
    <java
     classname="operators.E07_CoinFlipping"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E08_LongLiterals">
    <java
     classname="operators.E08_LongLiterals"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E09_MinMaxExponents">
    <java
     classname="operators.E09_MinMaxExponents"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E10_BitwiseOperators">
    <java
     classname="operators.E10_BitwiseOperators"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E11_SignedRightShift">
    <java
     classname="operators.E11_SignedRightShift"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E12_UnsignedRightShift">
    <java
     classname="operators.E12_UnsignedRightShift"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E13_BinaryChar">
    <java
     classname="operators.E13_BinaryChar"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="E14_CompareStrings">
    <java
     classname="operators.E14_CompareStrings"
     classpathref="project.class.path"
     dir="../operators/"
     failonerror="true"
     fork="true"/>
  </target>

  <target
   depends="build"
   description="Compile and run"
   name="run">
    <touch file="failures"/>
    <antcall target="E01_PrintStatements"/>
    <antcall target="E02_Aliasing"/>
    <antcall target="E03_Aliasing2"/>
    <antcall target="E04_Velocity"/>
    <antcall target="E05_Dogs"/>
    <antcall target="E06_DogsComparison"/>
    <antcall target="E07_CoinFlipping"/>
    <antcall target="E08_LongLiterals"/>
    <antcall target="E09_MinMaxExponents"/>
    <antcall target="E10_BitwiseOperators"/>
    <antcall target="E11_SignedRightShift"/>
    <antcall target="E12_UnsignedRightShift"/>
    <antcall target="E13_BinaryChar"/>
    <antcall target="E14_CompareStrings"/>
    <delete file="failures"/>
  </target>

  <target description="delete all byproducts" name="clean">
    <delete>
      <fileset dir="${basedir}" includes="**/*.class"/>
      <fileset dir="${basedir}" includes="**/*output.txt"/>
      <fileset dir="${basedir}" includes="**/*control*.txt"/>
      <fileset dir="${basedir}" includes="**/*results.txt"/>
      <fileset dir="${basedir}" includes="**/log.txt"/>
      <fileset dir="${basedir}" includes="**/cmp-out.txt"/>
      <fileset dir="${basedir}" includes="**/Generated.txt"/>
      <fileset dir="${basedir}" includes="**/OutputErrors.txt"/>
      <fileset dir="${basedir}" includes="failures"/>
    </delete>
    <echo message="clean successful"/>
  </target>

  <target
   depends="build"
   description="Verifies comment output; requires Python 2.3 or newer"
   name="verify">
    <exec executable="python">
      <arg value="../OutputVerifier.py"/>
      <env
       key="CLASSPATH"
       path="${basedir};${basedir}/..;${basedir}/../..;"/>
    </exec>
  </target>

</project>


